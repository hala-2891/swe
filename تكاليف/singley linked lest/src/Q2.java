public class Q2 {//بالتأكيد! هنا خوارزمية لإيجاد العقدة قبل الأخيرة في قائمة مرتبطة مفردة حيث يتم تمثيل العقد الأخير بإشارة next تساوي null.

    //الخوارزمية تعتمد على استخدام اثنين من المؤشرات: المؤشر الحالي والمؤشر السابق. يتحرك المؤشر الحالي عبر القائمة بشكل تتالي مع المؤشر السابق يتبعه بمسافة عقدة واحدة فقط.

   // هنا الخوارزمية:

          //  1. قم بتعيين المؤشر الحالي (current) على رأس القائمة.
           // 2. قم بتعيين المؤشر السابق (previous) على قيمة null.
           // 3. قم بتحريك المؤشر الحالي (current) والمؤشر السابق (previous) عبر القائمة حتى يصل المؤشر الحالي إلى آخر عقدة في القائمة (حيث next يساوي null).
           // 4. عندما يكون المؤشر الحالي (current) يشير إلى العقدة الأخيرة، اعدر العقدة التي تليها (previous).
          //  5. إذا كانت العقدة الثانية إلى الأخيرة غير موجودة (إشارة أن القائمة فارغة أو تحتوي على عقدة واحدة فقط)، فأعد قيمة null.

    // تنفيذ بسيط للخوارزمية بلغة Java:

   // java
    public Node findSecondToLastNode(Node head) {
        if (head == null || head.next == null) {
            return null;
        }

        Node current = head;
        Node previous = null;

        while (current.next != null) {
            previous = current;
            current = current.next;
        }

        return previous;
    }


    //أفترض أن لديك فئة تسمى Node تمثل عقدة في القائمة المرتبطة. يمكنك استخدام هذا الألگوريتم بتمرير رأس القائمة إلى الدالة findSecondToLastNode وسيتم إرجاع العقدة الثانية إلى الأخيرة في القائمة.

    //أتمنى أن يكون ذلك واضحًا. إذا كان لديك أي أسئلة إضافية، فلا تتردد في طرحها.
}
